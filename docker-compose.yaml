version: "3.8"

services:
  wazuh.manager:
    image: wazuh/wazuh-manager:4.7.3
    container_name: wazuh_manager
    hostname: wazuh-manager
    ports:
      - "1514:1514/udp"
      - "1515:1515"
      - "514:514/udp"
      - "55000:55000"
    environment:
      - WAZUH_API_CORS_ENABLED=true
    volumes:
      - wazuh_data:/var/ossec/data
    networks:
      - soc-net

  wazuh.indexer:
    image: wazuh/wazuh-indexer:4.7.3
    container_name: wazuh_indexer
    hostname: wazuh-indexer
    ports:
      - "9200:9200"
    environment:
      - "opensearch.yml:discovery.type=single-node"
      - "opensearch.yml:plugins.security.disabled=true"
    volumes:
      - wazuh_indexer_data:/var/lib/opensearch
    networks:
      - soc-net

  wazuh.dashboard:
    image: wazuh/wazuh-dashboard:4.7.3
    container_name: wazuh_dashboard
    hostname: wazuh-dashboard
    ports:
      - "5601:5601"
    environment:
      - OPENSEARCH_HOSTS=https://wazuh-indexer:9200
    depends_on:
      - wazuh.indexer
    networks:
      - soc-net

  cortex:
    image: thehiveproject/cortex:3.1.8
    container_name: cortex
    ports:
      - "9001:9001"
    environment:
      - CORTEX_ELASTICSEARCH_URL=http://wazuh-indexer:9200
      - ANALYZERS_PATHS=/opt/Cortex-Analyzers/analyzers
      - JOB_DIRECTORY=/opt/cortex/jobs
      - RUNNER=process
    volumes:
      - cortex_data:/opt/cortex/data
      - cortex_logs:/opt/cortex/logs
      - ./Cortex-Analyzers/analyzers:/opt/Cortex-Analyzers/analyzers
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - wazuh.indexer
    networks:
      - soc-net

  thehive:
    image: strangebee/thehive:5.5.3-1
    container_name: thehive
    ports:
      - "9000:9000"
    environment:
      - ELASTICSEARCH_URL=http://wazuh-indexer:9200
      - CORTEX_URL=http://cortex:9001
    volumes:
      - thehive_data:/data
    depends_on:
      - wazuh.indexer
      - cortex
    networks:
      - soc-net

  shuffle:
    image: ghcr.io/shuffle/shuffle:latest
    container_name: shuffle
    ports:
      - "3001:3001"
    environment:
      - SHUFFLE_ORG=shuffle
      - SHUFFLE_PORT=3001
      - SHUFFLE_THEHIVE_URL=http://thehive:9000
    volumes:
      - shuffle_data:/app/data
    depends_on:
      - thehive
    networks:
      - soc-net

  vaultwarden:
    image: vaultwarden/server:latest
    container_name: vaultwarden
    ports:
      - "8090:80"
    environment:
      - WEBSOCKET_ENABLED=true
      - SIGNUPS_ALLOWED=false
      - DOMAIN=http://localhost:8090
    volumes:
      - vaultwarden_data:/data
    networks:
      - soc-net

  vulnerability-tests:
    image: registry.community.greenbone.net/community/vulnerability-tests
    environment:
      FEED_RELEASE: "24.10"
    volumes:
      - vt_data_vol:/mnt
    networks:
      - greenbone-net

  notus-data:
    image: registry.community.greenbone.net/community/notus-data
    volumes:
      - notus_data_vol:/mnt
    networks:
      - greenbone-net

  scap-data:
    image: registry.community.greenbone.net/community/scap-data
    volumes:
      - scap_data_vol:/mnt
    networks:
      - greenbone-net

  cert-bund-data:
    image: registry.community.greenbone.net/community/cert-bund-data
    volumes:
      - cert_data_vol:/mnt
    networks:
      - greenbone-net

  dfn-cert-data:
    image: registry.community.greenbone.net/community/dfn-cert-data
    volumes:
      - cert_data_vol:/mnt
    depends_on:
      - cert-bund-data
    networks:
      - greenbone-net

  data-objects:
    image: registry.community.greenbone.net/community/data-objects
    environment:
      FEED_RELEASE: "24.10"
    volumes:
      - data_objects_vol:/mnt
    networks:
      - greenbone-net

  report-formats:
    image: registry.community.greenbone.net/community/report-formats
    environment:
      FEED_RELEASE: "24.10"
    volumes:
      - data_objects_vol:/mnt
    depends_on:
      - data-objects
    networks:
      - greenbone-net

  gpg-data:
    image: registry.community.greenbone.net/community/gpg-data
    volumes:
      - gpg_data_vol:/mnt
    networks:
      - greenbone-net

  redis-server:
    image: registry.community.greenbone.net/community/redis-server
    restart: on-failure
    volumes:
      - redis_socket_vol:/run/redis/
    networks:
      - greenbone-net

  pg-gvm:
    image: registry.community.greenbone.net/community/pg-gvm:stable
    restart: on-failure
    volumes:
      - psql_data_vol:/var/lib/postgresql
      - psql_socket_vol:/var/run/postgresql
    networks:
      - greenbone-net

  gvmd:
    image: registry.community.greenbone.net/community/gvmd:stable
    restart: on-failure
    volumes:
      - gvmd_data_vol:/var/lib/gvm
      - scap_data_vol:/var/lib/gvm/scap-data/
      - cert_data_vol:/var/lib/gvm/cert-data
      - data_objects_vol:/var/lib/gvm/data-objects/gvmd
      - vt_data_vol:/var/lib/openvas/plugins
      - psql_data_vol:/var/lib/postgresql
      - gvmd_socket_vol:/run/gvmd
      - ospd_openvas_socket_vol:/run/ospd
      - psql_socket_vol:/var/run/postgresql
    depends_on:
      pg-gvm:
        condition: service_started
      scap-data:
        condition: service_completed_successfully
      cert-bund-data:
        condition: service_completed_successfully
      dfn-cert-data:
        condition: service_completed_successfully
      data-objects:
        condition: service_completed_successfully
      report-formats:
        condition: service_completed_successfully
    networks:
      - greenbone-net

  gsa:
    image: registry.community.greenbone.net/community/gsa:stable
    restart: on-failure
    ports:
      - "127.0.0.1:9392:80"
    volumes:
      - gvmd_socket_vol:/run/gvmd
    depends_on:
      - gvmd
    networks:
      - greenbone-net

  configure-openvas:
    image: registry.community.greenbone.net/community/openvas-scanner:stable
    volumes:
      - openvas_data_vol:/mnt
      - openvas_log_data_vol:/var/log/openvas
    command:
      - /bin/sh
      - -c
      - |
        printf "table_driven_lsc = yes\nopenvasd_server = http://openvasd:80\n" > /mnt/openvas.conf
        sed "s/127/128/" /etc/openvas/openvas_log.conf | sed 's/gvm/openvas/' > /mnt/openvas_log.conf
        chmod 644 /mnt/openvas.conf
        chmod 644 /mnt/openvas_log.conf
        touch /var/log/openvas/openvas.log
        chmod 666 /var/log/openvas/openvas.log
    networks:
      - greenbone-net

  openvas:
    image: registry.community.greenbone.net/community/openvas-scanner:stable
    restart: on-failure
    volumes:
      - openvas_data_vol:/etc/openvas
      - openvas_log_data_vol:/var/log/openvas
    command:
      - /bin/sh
      - -c
      - |
        cat /etc/openvas/openvas.conf
        tail -f /var/log/openvas/openvas.log
    depends_on:
      configure-openvas:
        condition: service_completed_successfully
    networks:
      - greenbone-net

  openvasd:
    image: registry.community.greenbone.net/community/openvas-scanner:stable
    restart: on-failure
    environment:
      OPENVASD_MODE: service_notus
      GNUPGHOME: /etc/openvas/gnupg
      LISTENING: 0.0.0.0:80
    volumes:
      - openvas_data_vol:/etc/openvas
      - openvas_log_data_vol:/var/log/openvas
      - gpg_data_vol:/etc/openvas/gnupg
      - notus_data_vol:/var/lib/notus
    depends_on:
      vulnerability-tests:
        condition: service_completed_successfully
      configure-openvas:
        condition: service_completed_successfully
      gpg-data:
        condition: service_completed_successfully
    networks:
      greenbone-net:
        aliases:
          - openvasd

  ospd-openvas:
    image: registry.community.greenbone.net/community/ospd-openvas:stable
    restart: on-failure
    hostname: ospd-openvas.local
    cap_add:
      - NET_ADMIN
      - NET_RAW
    security_opt:
      - seccomp=unconfined
      - apparmor=unconfined
    command:
      - ospd-openvas
      - -f
      - --config
      - /etc/gvm/ospd-openvas.conf
      - --notus-feed-dir
      - /var/lib/notus/advisories
      - -m
      - "666"
    volumes:
      - gpg_data_vol:/etc/openvas/gnupg
      - vt_data_vol:/var/lib/openvas/plugins
      - notus_data_vol:/var/lib/notus
      - ospd_openvas_socket_vol:/run/ospd
      - redis_socket_vol:/run/redis/
      - openvas_data_vol:/etc/openvas/
      - openvas_log_data_vol:/var/log/openvas
    depends_on:
      redis-server:
        condition: service_started
      gpg-data:
        condition: service_completed_successfully
      vulnerability-tests:
        condition: service_completed_successfully
      configure-openvas:
        condition: service_completed_successfully
    networks:
      - greenbone-net

  gvm-tools:
    image: registry.community.greenbone.net/community/gvm-tools
    volumes:
      - gvmd_socket_vol:/run/gvmd
      - ospd_openvas_socket_vol:/run/ospd
    depends_on:
      - gvmd
      - ospd-openvas
    networks:
      - greenbone-net

volumes:
  wazuh_data:
  wazuh_indexer_data:
  cortex_data:
  cortex_logs:
  thehive_data:
  shuffle_data:
  vaultwarden_data:
  gpg_data_vol:
  scap_data_vol:
  cert_data_vol:
  data_objects_vol:
  gvmd_data_vol:
  psql_data_vol:
  vt_data_vol:
  notus_data_vol:
  psql_socket_vol:
  gvmd_socket_vol:
  ospd_openvas_socket_vol:
  redis_socket_vol:
  openvas_data_vol:
  openvas_log_data_vol:

networks:
  soc-net:
    driver: bridge
  greenbone-net:
    driver: bridge
